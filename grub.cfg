#
# DO NOT EDIT THIS FILE
#
# It is automatically generated by grub-mkconfig using templates
# from /etc/grub.d and settings from /etc/default/grub
#

### BEGIN /etc/grub.d/00_header ###
if [ -s $prefix/grubenv ]; then
  load_env
fi
if [ "${next_entry}" ] ; then
   set default="${next_entry}"
   set next_entry=
   save_env next_entry
   set boot_once=true
else
   set default="0"
fi

if [ x"${feature_menuentry_id}" = xy ]; then
  menuentry_id_option="--id"
else
  menuentry_id_option=""
fi

export menuentry_id_option

if [ "${prev_saved_entry}" ]; then
  set saved_entry="${prev_saved_entry}"
  save_env saved_entry
  set prev_saved_entry=
  save_env prev_saved_entry
  set boot_once=true
fi

function savedefault {
  if [ -z "${boot_once}" ]; then
    saved_entry="${chosen}"
    save_env saved_entry
  fi
}

function load_video {
  if [ x$feature_all_video_module = xy ]; then
    insmod all_video
  else
    insmod efi_gop
    insmod efi_uga
    insmod ieee1275_fb
    insmod vbe
    insmod vga
    insmod video_bochs
    insmod video_cirrus
  fi
}

if [ x$feature_default_font_path = xy ] ; then
   font=unicode
else
insmod part_gpt
insmod ext2
search --no-floppy --fs-uuid --set=root cefb05d9-b95f-4010-8a3a-198f2c15582f
    font="/usr/share/grub/unicode.pf2"
fi

if loadfont $font ; then
  set gfxmode=auto
  load_video
  insmod gfxterm
fi
terminal_output gfxterm
if [ x$feature_timeout_style = xy ] ; then
  set timeout_style=menu
  set timeout=5
# Fallback normal timeout code in case the timeout_style feature is
# unavailable.
else
  set timeout=5
fi
### END /etc/grub.d/00_header ###

### BEGIN /etc/grub.d/10_linux ###
menuentry 'Gentoo GNU/Linux, with Linux 5.15.88-gentoo' --class gentoo --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-5.15.88-gentoo-advanced-cefb05d9-b95f-4010-8a3a-198f2c15582f' {
	load_video
	if [ "x$grub_platform" = xefi ]; then
		set gfxpayload=keep
	fi
	insmod gzio
	insmod part_gpt
	insmod ext2
	search --no-floppy --fs-uuid --set=root cefb05d9-b95f-4010-8a3a-198f2c15582f
	echo	'Loading Linux 5.15.88-gentoo ...'
	linux	/boot/vmlinuz-5.15.88-gentoo root=PARTUUID=9d81b315-72c8-ae4e-94ac-8a8ecccae2cc ro  
}
menuentry 'Gentoo GNU/Linux' --class gentoo --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-cefb05d9-b95f-4010-8a3a-198f2c15582f' {
	load_video
	if [ "x$grub_platform" = xefi ]; then
		set gfxpayload=keep
	fi
	insmod gzio
	insmod part_gpt
	insmod ext2
	search --no-floppy --fs-uuid --set=root cefb05d9-b95f-4010-8a3a-198f2c15582f
	echo	'Loading Linux 5.15.88-gentoo-dist ...'
	linux	/boot/vmlinuz-5.15.88-gentoo-dist root=UUID=cefb05d9-b95f-4010-8a3a-198f2c15582f ro  
	echo	'Loading initial ramdisk ...'
	initrd	/boot/initramfs-5.15.88-gentoo-dist.img
}
menuentry 'Arch Linux (on /dev/nvme0n1p2)' --class arch --class gnu-linux --class gnu --class os $menuentry_id_option 'osprober-gnulinux-simple-825a1c3a-6f0b-4509-b534-667b029f1972' {
	insmod part_gpt
	insmod btrfs
	search --no-floppy --fs-uuid --set=root 825a1c3a-6f0b-4509-b534-667b029f1972
	linux /boot/vmlinuz-linux root=UUID=825a1c3a-6f0b-4509-b534-667b029f1972 rw loglevel=3
	initrd /boot/initramfs-linux.img
}
menuentry "Win10 SSD" {
	insmod part_gpt
	insmod fat
	insmod chain
	search --no-floppy --fs-uuid --set=root --hint-bios=hd1,gpt1 --hint-efi=hd1,gpt1 --hint-baremetal=ahci1,gpt1 DED5-27D9
	chainloader /EFI/Microsoft/Boot/bootmgfw.efi
}
menuentry "Microsoft Windows Vista/7/8/8.1 UEFI/GPT" {
	insmod part_gpt
	insmod fat
	insmod chain
	search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt1 --hint-efi=hd0,gpt1 --hint-baremetal=ahci0,gpt1 000B-7BF1
	chainloader /EFI/Microsoft/Boot/bootmgfw.efi
}
submenu 'Advanced options for Gentoo GNU/Linux' $menuentry_id_option 'gnulinux-advanced-cefb05d9-b95f-4010-8a3a-198f2c15582f' {
	menuentry 'Gentoo GNU/Linux, with Linux 5.15.88-gentoo-dist' --class gentoo --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-5.15.88-gentoo-dist-advanced-cefb05d9-b95f-4010-8a3a-198f2c15582f' {
		load_video
		if [ "x$grub_platform" = xefi ]; then
			set gfxpayload=keep
		fi
		insmod gzio
		insmod part_gpt
		insmod ext2
		search --no-floppy --fs-uuid --set=root cefb05d9-b95f-4010-8a3a-198f2c15582f
		echo	'Loading Linux 5.15.88-gentoo-dist ...'
		linux	/boot/vmlinuz-5.15.88-gentoo-dist root=UUID=cefb05d9-b95f-4010-8a3a-198f2c15582f ro  
		echo	'Loading initial ramdisk ...'
		initrd	/boot/initramfs-5.15.88-gentoo-dist.img
	}
	menuentry 'Gentoo GNU/Linux, with Linux 5.15.88-gentoo-dist (recovery mode)' --class gentoo --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-5.15.88-gentoo-dist-recovery-cefb05d9-b95f-4010-8a3a-198f2c15582f' {
		load_video
		if [ "x$grub_platform" = xefi ]; then
			set gfxpayload=keep
		fi
		insmod gzio
		insmod part_gpt
		insmod ext2
		search --no-floppy --fs-uuid --set=root cefb05d9-b95f-4010-8a3a-198f2c15582f
		echo	'Loading Linux 5.15.88-gentoo-dist ...'
		linux	/boot/vmlinuz-5.15.88-gentoo-dist root=UUID=cefb05d9-b95f-4010-8a3a-198f2c15582f ro single 
		echo	'Loading initial ramdisk ...'
		initrd	/boot/initramfs-5.15.88-gentoo-dist.img
	}
	menuentry 'Gentoo GNU/Linux, with Linux 5.15.88-gentoo (recovery mode)' --class gentoo --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-5.15.88-gentoo-recovery-cefb05d9-b95f-4010-8a3a-198f2c15582f' {
		load_video
		if [ "x$grub_platform" = xefi ]; then
			set gfxpayload=keep
		fi
		insmod gzio
		insmod part_gpt
		insmod ext2
		search --no-floppy --fs-uuid --set=root cefb05d9-b95f-4010-8a3a-198f2c15582f
		echo	'Loading Linux 5.15.88-gentoo ...'
		linux	/boot/vmlinuz-5.15.88-gentoo root=PARTUUID=9d81b315-72c8-ae4e-94ac-8a8ecccae2cc ro single 
	}
}

### END /etc/grub.d/10_linux ###

### BEGIN /etc/grub.d/15_ostree ###
### END /etc/grub.d/15_ostree ###

### BEGIN /etc/grub.d/20_linux_xen ###

### END /etc/grub.d/20_linux_xen ###

### BEGIN /etc/grub.d/30_os-prober ###
### END /etc/grub.d/30_os-prober ###

### BEGIN /etc/grub.d/30_uefi-firmware ###
menuentry 'UEFI Firmware Settings' $menuentry_id_option 'uefi-firmware' {
	fwsetup
}
### END /etc/grub.d/30_uefi-firmware ###

### BEGIN /etc/grub.d/40_custom ###
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.
### END /etc/grub.d/40_custom ###

### BEGIN /etc/grub.d/41_custom ###
if [ -f  ${config_directory}/custom.cfg ]; then
  source ${config_directory}/custom.cfg
elif [ -z "${config_directory}" -a -f  $prefix/custom.cfg ]; then
  source $prefix/custom.cfg
fi
### END /etc/grub.d/41_custom ###
